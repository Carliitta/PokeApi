{"ast":null,"code":"import { TYPES } from \"./actions\";\nconst initialState = {\n  pokemones: [],\n  detail: [],\n  tipos: [],\n  pokeFil: []\n};\nexport default function rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case TYPES.OBTENER_POKEMON:\n      return {\n        ...state,\n        pokemones: action.payload,\n        pokeFil: action.payload\n      };\n    case TYPES.BUSCAR_POKEMON:\n      return {\n        ...state,\n        pokemones: action.payload\n      };\n    case TYPES.DETALLE_POKEMON:\n      return {\n        ...state,\n        detail: action.payload\n      };\n    case TYPES.OBTENER_TIPO:\n      return {\n        ...state,\n        tipos: action.payload\n      };\n    case TYPES.ORDER_BY_NAME:\n      if (action.payload === \"ASCENDENTE\") {\n        return {\n          ...state,\n          pokeFil: state.pokeFil.sort((a, b) => {\n            if (a.name < b.name) {\n              return -1;\n            }\n            if (a.name > b.name) {\n              return 1;\n            }\n            return 0;\n          })\n        };\n      } else {\n        return {\n          ...state,\n          pokeFil: state.pokeFil.sort((a, b) => {\n            if (a.name < b.name) {\n              return 1;\n            }\n            if (a.name > b.name) {\n              return -1;\n            }\n            return 0;\n          })\n        };\n      }\n    case TYPES.ORDER_TYPE:\n      var pokes = state.pokemones.filter(c => {\n        return c.types.find(c => {\n          return c.type.name === action.payload;\n        });\n      });\n      return {\n        ...state,\n        //filtro los paises    retorno donde el nombre sea igual al payload \n        pok\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["TYPES","initialState","pokemones","detail","tipos","pokeFil","rootReducer","state","action","type","OBTENER_POKEMON","payload","BUSCAR_POKEMON","DETALLE_POKEMON","OBTENER_TIPO","ORDER_BY_NAME","sort","a","b","name","ORDER_TYPE","pokes","filter","c","types","find","pok"],"sources":["C:/Users/Usuario/OneDrive/Desktop/PI-Pokemon-main/client/src/Redux/reducer.js"],"sourcesContent":["import { TYPES } from \"./actions\"\r\nconst initialState={\r\n  pokemones:[],\r\n  detail:[],\r\n  tipos:[],\r\n  pokeFil:[]\r\n}\r\nexport default function rootReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case TYPES.OBTENER_POKEMON:\r\n        return{\r\n           ...state,\r\n          pokemones: action.payload,\r\n          pokeFil: action.payload\r\n        }\r\n        case TYPES.BUSCAR_POKEMON:\r\n        \r\n        return{\r\n          ...state,\r\n         pokemones: action.payload\r\n       }\r\n       case TYPES.DETALLE_POKEMON:\r\n       return{\r\n        ...state,\r\n       detail: action.payload\r\n     }\r\n     case TYPES.OBTENER_TIPO :\r\n      return {\r\n      ...state,\r\n       tipos: action.payload\r\n  }\r\n     case TYPES.ORDER_BY_NAME:\r\n      if(action.payload===\"ASCENDENTE\"){\r\n         return {\r\n           ...state,\r\n           pokeFil: state.pokeFil.sort((a, b) => {\r\n             if (a.name < b.name) {\r\n               return -1;\r\n           }\r\n           if (a.name > b.name) {\r\n               return 1;\r\n           }\r\n           return 0;\r\n         }) \r\n       }\r\n      }else{\r\n         return {\r\n           ...state,\r\n           pokeFil: state.pokeFil.sort((a, b) => {\r\n             if (a.name < b.name) {\r\n               return 1;\r\n           }\r\n           if (a.name > b.name) {\r\n               return -1;\r\n           }\r\n           return 0;\r\n         }) \r\n       }\r\n      }\r\n      case TYPES.ORDER_TYPE :\r\n      var pokes=state.pokemones.filter((c) => {\r\n        return c.types.find((c) => { \r\n         return c.type.name === action.payload})})\r\n   \r\n\r\n      return { \r\n          ...state, \r\n           //filtro los paises    retorno donde el nombre sea igual al payload \r\n          pok\r\n      }\r\n\r\n        default:\r\n          return state;\r\n    }\r\n  \r\n}"],"mappings":"AAAA,SAASA,KAAK,QAAQ,WAAW;AACjC,MAAMC,YAAY,GAAC;EACjBC,SAAS,EAAC,EAAE;EACZC,MAAM,EAAC,EAAE;EACTC,KAAK,EAAC,EAAE;EACRC,OAAO,EAAC;AACV,CAAC;AACD,eAAe,SAASC,WAAW,GAA+B;EAAA,IAA9BC,KAAK,uEAAGN,YAAY;EAAA,IAAEO,MAAM;EAE5D,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKT,KAAK,CAACU,eAAe;MAC1B,OAAM;QACH,GAAGH,KAAK;QACTL,SAAS,EAAEM,MAAM,CAACG,OAAO;QACzBN,OAAO,EAAEG,MAAM,CAACG;MAClB,CAAC;IACD,KAAKX,KAAK,CAACY,cAAc;MAEzB,OAAM;QACJ,GAAGL,KAAK;QACTL,SAAS,EAAEM,MAAM,CAACG;MACpB,CAAC;IACD,KAAKX,KAAK,CAACa,eAAe;MAC1B,OAAM;QACL,GAAGN,KAAK;QACTJ,MAAM,EAAEK,MAAM,CAACG;MACjB,CAAC;IACD,KAAKX,KAAK,CAACc,YAAY;MACtB,OAAO;QACP,GAAGP,KAAK;QACPH,KAAK,EAAEI,MAAM,CAACG;MACnB,CAAC;IACE,KAAKX,KAAK,CAACe,aAAa;MACvB,IAAGP,MAAM,CAACG,OAAO,KAAG,YAAY,EAAC;QAC9B,OAAO;UACL,GAAGJ,KAAK;UACRF,OAAO,EAAEE,KAAK,CAACF,OAAO,CAACW,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;YACpC,IAAID,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAE;cACnB,OAAO,CAAC,CAAC;YACb;YACA,IAAIF,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAE;cACjB,OAAO,CAAC;YACZ;YACA,OAAO,CAAC;UACV,CAAC;QACH,CAAC;MACF,CAAC,MAAI;QACF,OAAO;UACL,GAAGZ,KAAK;UACRF,OAAO,EAAEE,KAAK,CAACF,OAAO,CAACW,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;YACpC,IAAID,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAE;cACnB,OAAO,CAAC;YACZ;YACA,IAAIF,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAE;cACjB,OAAO,CAAC,CAAC;YACb;YACA,OAAO,CAAC;UACV,CAAC;QACH,CAAC;MACF;IACA,KAAKnB,KAAK,CAACoB,UAAU;MACrB,IAAIC,KAAK,GAACd,KAAK,CAACL,SAAS,CAACoB,MAAM,CAAEC,CAAC,IAAK;QACtC,OAAOA,CAAC,CAACC,KAAK,CAACC,IAAI,CAAEF,CAAC,IAAK;UAC1B,OAAOA,CAAC,CAACd,IAAI,CAACU,IAAI,KAAKX,MAAM,CAACG,OAAO;QAAA,CAAC,CAAC;MAAA,CAAC,CAAC;MAG5C,OAAO;QACH,GAAGJ,KAAK;QACP;QACDmB;MACJ,CAAC;IAEC;MACE,OAAOnB,KAAK;EAAC;AAGvB"},"metadata":{},"sourceType":"module"}