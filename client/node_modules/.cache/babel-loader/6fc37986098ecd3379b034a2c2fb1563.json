{"ast":null,"code":"import { TYPES } from \"./actions\";\nconst initialState = {\n  pokemones: [],\n  detail: [],\n  tipos: []\n};\nexport default function rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case TYPES.OBTENER_POKEMON:\n      return {\n        ...state,\n        pokemones: action.payload\n      };\n    case TYPES.BUSCAR_POKEMON:\n      return {\n        ...state,\n        pokemones: action.payload\n      };\n    case TYPES.DETALLE_POKEMON:\n      return {\n        ...state,\n        detail: action.payload\n      };\n    case TYPES.OBTENER_TIPO:\n      return {\n        ...state,\n        tipos: action.payload\n      };\n    case TYPES.ORDER_BY_NAME:\n      if (action.payload === \"ASCENDENTE\") {\n        return {\n          ...state,\n          pokemones: state.pokemones.sort((a, b) => {\n            if (a.name < b.name) {\n              return -1;\n            }\n            if (a.name > b.name) {\n              return 1;\n            }\n            return 0;\n          })\n        };\n      } else {\n        return {\n          ...state,\n          pokemones: state.pokemones.sort((a, b) => {\n            if (a.name < b.name) {\n              return 1;\n            }\n            if (a.name > b.name) {\n              return -1;\n            }\n            return 0;\n          })\n        };\n      }\n    case TYPES.ob:\n      return {\n        ...state,\n        //filtro los paises    retorno donde el nombre sea igual al payload \n        countriesFilt: state.countries.filter(c => {\n          return c.activities.find(c => {\n            return c.name === action.payload;\n          });\n        })\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["TYPES","initialState","pokemones","detail","tipos","rootReducer","state","action","type","OBTENER_POKEMON","payload","BUSCAR_POKEMON","DETALLE_POKEMON","OBTENER_TIPO","ORDER_BY_NAME","sort","a","b","name","ob","countriesFilt","countries","filter","c","activities","find"],"sources":["C:/Users/Usuario/OneDrive/Desktop/PI-Pokemon-main/client/src/Redux/reducer.js"],"sourcesContent":["import { TYPES } from \"./actions\"\r\nconst initialState={\r\n  pokemones:[],\r\n  detail:[],\r\n  tipos:[]\r\n}\r\nexport default function rootReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case TYPES.OBTENER_POKEMON:\r\n        return{\r\n           ...state,\r\n          pokemones: action.payload\r\n        }\r\n        case TYPES.BUSCAR_POKEMON:\r\n        \r\n        return{\r\n          ...state,\r\n         pokemones: action.payload\r\n       }\r\n       case TYPES.DETALLE_POKEMON:\r\n       return{\r\n        ...state,\r\n       detail: action.payload\r\n     }\r\n     case TYPES.OBTENER_TIPO :\r\n      return {\r\n      ...state,\r\n       tipos: action.payload\r\n  }\r\n     case TYPES.ORDER_BY_NAME:\r\n      if(action.payload===\"ASCENDENTE\"){\r\n         return {\r\n           ...state,\r\n           pokemones: state.pokemones.sort((a, b) => {\r\n             if (a.name < b.name) {\r\n               return -1;\r\n           }\r\n           if (a.name > b.name) {\r\n               return 1;\r\n           }\r\n           return 0;\r\n         }) \r\n       }\r\n      }else{\r\n         return {\r\n           ...state,\r\n           pokemones: state.pokemones.sort((a, b) => {\r\n             if (a.name < b.name) {\r\n               return 1;\r\n           }\r\n           if (a.name > b.name) {\r\n               return -1;\r\n           }\r\n           return 0;\r\n         }) \r\n       }\r\n      }\r\n      case TYPES.ob:\r\n      \r\n      return {\r\n          ...state,  //filtro los paises    retorno donde el nombre sea igual al payload \r\n          countriesFilt:state.countries.filter((c) => { return c.activities.find((c) => { return c.name === action.payload})})\r\n      }\r\n        default:\r\n          return state;\r\n    }\r\n  \r\n}"],"mappings":"AAAA,SAASA,KAAK,QAAQ,WAAW;AACjC,MAAMC,YAAY,GAAC;EACjBC,SAAS,EAAC,EAAE;EACZC,MAAM,EAAC,EAAE;EACTC,KAAK,EAAC;AACR,CAAC;AACD,eAAe,SAASC,WAAW,GAA+B;EAAA,IAA9BC,KAAK,uEAAGL,YAAY;EAAA,IAAEM,MAAM;EAE5D,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKR,KAAK,CAACS,eAAe;MAC1B,OAAM;QACH,GAAGH,KAAK;QACTJ,SAAS,EAAEK,MAAM,CAACG;MACpB,CAAC;IACD,KAAKV,KAAK,CAACW,cAAc;MAEzB,OAAM;QACJ,GAAGL,KAAK;QACTJ,SAAS,EAAEK,MAAM,CAACG;MACpB,CAAC;IACD,KAAKV,KAAK,CAACY,eAAe;MAC1B,OAAM;QACL,GAAGN,KAAK;QACTH,MAAM,EAAEI,MAAM,CAACG;MACjB,CAAC;IACD,KAAKV,KAAK,CAACa,YAAY;MACtB,OAAO;QACP,GAAGP,KAAK;QACPF,KAAK,EAAEG,MAAM,CAACG;MACnB,CAAC;IACE,KAAKV,KAAK,CAACc,aAAa;MACvB,IAAGP,MAAM,CAACG,OAAO,KAAG,YAAY,EAAC;QAC9B,OAAO;UACL,GAAGJ,KAAK;UACRJ,SAAS,EAAEI,KAAK,CAACJ,SAAS,CAACa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;YACxC,IAAID,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAE;cACnB,OAAO,CAAC,CAAC;YACb;YACA,IAAIF,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAE;cACjB,OAAO,CAAC;YACZ;YACA,OAAO,CAAC;UACV,CAAC;QACH,CAAC;MACF,CAAC,MAAI;QACF,OAAO;UACL,GAAGZ,KAAK;UACRJ,SAAS,EAAEI,KAAK,CAACJ,SAAS,CAACa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;YACxC,IAAID,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAE;cACnB,OAAO,CAAC;YACZ;YACA,IAAIF,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAE;cACjB,OAAO,CAAC,CAAC;YACb;YACA,OAAO,CAAC;UACV,CAAC;QACH,CAAC;MACF;IACA,KAAKlB,KAAK,CAACmB,EAAE;MAEb,OAAO;QACH,GAAGb,KAAK;QAAG;QACXc,aAAa,EAACd,KAAK,CAACe,SAAS,CAACC,MAAM,CAAEC,CAAC,IAAK;UAAE,OAAOA,CAAC,CAACC,UAAU,CAACC,IAAI,CAAEF,CAAC,IAAK;YAAE,OAAOA,CAAC,CAACL,IAAI,KAAKX,MAAM,CAACG,OAAO;UAAA,CAAC,CAAC;QAAA,CAAC;MACvH,CAAC;IACC;MACE,OAAOJ,KAAK;EAAC;AAGvB"},"metadata":{},"sourceType":"module"}