{"ast":null,"code":"import axios from \"axios\";\nexport const siguiente = [];\nexport const anterior = [];\nexport const TYPES = {\n  OBTENER_POKEMON: \"OBTENER_POKEMON\",\n  BUSCAR_POKEMON: \"BUSCAR_POKEMON\",\n  DETALLE_POKEMON: \"DETALLE_POKEMON\",\n  ORDER_BY_NAME: \" ORDER_BY_NAME\",\n  ORDER_TYPE: \"ORDER_TYPE \",\n  OBTENER_TIPO: \"OBTENER_TIPO\"\n};\nexport function obtenerPokemons(url) {\n  try {\n    return function (dispatch) {\n      fetch(url).then(response => response.json()).then(data => {\n        Promise.all(data.results.map(u => fetch(u.url))).then(pokemon => Promise.all(pokemon.map(res => res.json()))).then(poke => {\n          console.log();\n          dispatch({\n            type: TYPES.OBTENER_POKEMON,\n            payload: poke\n          });\n        });\n      });\n    };\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function buscarPokemon(nombre) {\n  return function (dispatch) {\n    try {\n      fetch(`https://pokeapi.co/api/v2/pokemon/${nombre}`).then(response => response.json()).then(poke => {\n        var arrPokemon = [];\n        arrPokemon.push(poke);\n        console.log(poke);\n        dispatch({\n          type: TYPES.BUSCAR_POKEMON,\n          payload: arrPokemon\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function detallePokemon(id) {\n  return function (dispatch) {\n    try {\n      fetch(`https://pokeapi.co/api/v2/pokemon/${id}`).then(response => response.json()).then(data => {\n        dispatch({\n          type: TYPES.DETALLE_POKEMON,\n          payload: data\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function getTypes() {\n  return function (dispatch) {\n    fetch('https://pokeapi.co/api/v2/type').then(response => response.json()).then(data => {\n      console.log(data.results);\n      dispatch({\n        type: TYPES.OBTENER_TIPO,\n        payload: data.results\n      });\n    });\n  };\n}\n//////ordenamiento\nexport function Sort(order) {\n  //recive una forma de ordenar\n  return {\n    type: TYPES.ORDER_BY_NAME,\n    payload: order\n  };\n}\n_c = Sort;\n;\nexport function orderByType(order) {\n  //recive una forma de ordenar\n  return {\n    type: TYPES.ORDER_TYPE,\n    payload: order\n  };\n}\n;\nvar _c;\n$RefreshReg$(_c, \"Sort\");","map":{"version":3,"names":["axios","siguiente","anterior","TYPES","OBTENER_POKEMON","BUSCAR_POKEMON","DETALLE_POKEMON","ORDER_BY_NAME","ORDER_TYPE","OBTENER_TIPO","obtenerPokemons","url","dispatch","fetch","then","response","json","data","Promise","all","results","map","u","pokemon","res","poke","console","log","type","payload","error","buscarPokemon","nombre","arrPokemon","push","detallePokemon","id","getTypes","Sort","order","orderByType"],"sources":["C:/Users/Usuario/OneDrive/Desktop/PI-Pokemon-main/client/src/Redux/actions.js"],"sourcesContent":["import axios from \"axios\"\r\nexport const siguiente =[]\r\nexport const anterior =[]\r\nexport const TYPES={\r\n   OBTENER_POKEMON:\"OBTENER_POKEMON\",\r\n   BUSCAR_POKEMON:\"BUSCAR_POKEMON\",\r\n   DETALLE_POKEMON :\"DETALLE_POKEMON\",\r\n   ORDER_BY_NAME:\" ORDER_BY_NAME\",\r\n   ORDER_TYPE :\"ORDER_TYPE \",\r\n   OBTENER_TIPO:\"OBTENER_TIPO\"\r\n}\r\n\r\n\r\nexport function obtenerPokemons(url){\r\n  try {\r\n    return  function (dispatch) {\r\n    fetch(url)\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n         \r\n            Promise.all(data.results.map(u=>fetch(u.url))).then(pokemon =>\r\n            Promise.all(pokemon.map(res => res.json()))\r\n            \r\n        ).then(poke => {\r\n          console.log()\r\n            dispatch({\r\n          type:TYPES.OBTENER_POKEMON,\r\n          payload:poke\r\n        })    \r\n    })\r\n  })\r\n  }\r\n  } catch (error) {\r\n      console.log(error)\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport  function buscarPokemon(nombre) {\r\n    return  function (dispatch) {\r\n        try {\r\n          fetch(`https://pokeapi.co/api/v2/pokemon/${nombre}` )\r\n          .then(response=>response.json())\r\n          .then(poke =>{\r\n            var arrPokemon=[]\r\n            arrPokemon.push(poke)\r\n          console.log(poke);\r\n             dispatch({\r\n              type:TYPES.BUSCAR_POKEMON,\r\n              payload:arrPokemon\r\n            })   \r\n          })\r\n        } catch (error) {\r\n          \r\n            console.log(error)\r\n        }\r\n    }\r\n  }\r\n\r\n  export function detallePokemon(id) {\r\n    return  function (dispatch) {\r\n        try {\r\n          fetch(`https://pokeapi.co/api/v2/pokemon/${id}`)\r\n          .then(response=>response.json())\r\n          .then(data=>{\r\n             dispatch({\r\n              type:TYPES.DETALLE_POKEMON,\r\n              payload:data\r\n            }) \r\n          })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n  } \r\n\r\n  export function getTypes() {\r\n    return  function (dispatch) {\r\n      fetch('https://pokeapi.co/api/v2/type')\r\n      .then(response=>response.json())\r\n      .then(data=>{\r\n        console.log(data.results)\r\n          dispatch({\r\n            type:TYPES.OBTENER_TIPO,\r\n            payload: data.results\r\n        })\r\n      })\r\n    }\r\n  }\r\n  //////ordenamiento\r\n  export  function Sort(order) { //recive una forma de ordenar\r\n    return{\r\n     type :TYPES.ORDER_BY_NAME ,\r\n     payload:order\r\n    }\r\n };\r\n\r\n export  function orderByType(order) { //recive una forma de ordenar\r\n  return{\r\n   type :TYPES.ORDER_TYPE ,\r\n   payload:order\r\n  }\r\n};\r\n \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}